Results:

Extra large
insert 776.673416 ms
append 2.601417 ms

Large
insert 6.019458 ms
append 221.584 μs

Medium
insert 169.834 μs
append 781.459 μs

Small
insert 6.209 μs
append 1.417 μs

Tiny
insert 15.167 μs
append 1.583 μs


Pattern: 

	I noticed that the doubler insert takes significantly longer than the doublerAppend. I believe this has to do with the fact that the doublerInsert is not just adding the appending the value but rather having to insert it into the array which causes the application to loop through the entire array again and adjust the position of the rest of the items after where the number is being inserted.

	The doublerAppend functions scales better than the doublerInsert function. You can tell by the amount of time it takes to process as the arrays get larger. doubleAssert time scales up significantly compared to doubleAppend


Time Complexity:

doublerInsert - O(n^2)
doublerAppend - O(n)
